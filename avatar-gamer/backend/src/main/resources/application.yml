server:
  port: 8080

spring:
  application:
    name: backend

  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: UTC

  flyway:
    enabled: true
    locations: classpath:db/migration
    validate-on-migrate: true
    baseline-on-migrate: false

logging:
  level:
    root: INFO
    org.hibernate.SQL: INFO

app:
  jwt:
    # Se puede sobreescribir con variables de entorno:
    #   APP_JWT_SECRET, APP_JWT_ISSUER, APP_JWT_ACCESS_TTL, APP_JWT_REFRESH_TTL
    secret: "${APP_JWT_SECRET:change-this-in-prod-32-bytes-min}"
    issuer: "${APP_JWT_ISSUER:avatargamer}"
    access-ttl: "${APP_JWT_ACCESS_TTL:PT30M}"    # ISO-8601 Duration
    refresh-ttl: "${APP_JWT_REFRESH_TTL:P7D}"

---
# Perfil: docker (contenedor + Postgres 'db')
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://db:5432/avatargamer
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

---
# Perfil: postgres (Postgres local en tu máquina)
spring:
  config:
    activate:
      on-profile: postgres

  datasource:
    url: jdbc:postgresql://localhost:5432/avatargamer
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

---
# Perfil: h2 (memoria, útil para pruebas rápidas)
spring:
  config:
    activate:
      on-profile: h2

  datasource:
    url: jdbc:h2:mem:avatargamer;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
    driver-class-name: org.h2.Driver
    username: sa
    password:

  h2:
    console:
      enabled: true
      path: /h2-console
